# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.9 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================

# WARNING: On Windows, do this to make:
#          make -f makefile.gcc SHELL=cmd.exe

include C:\wx\wxWidgets-3.1.0\build\msw\config.gcc

# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

BUILD=release
WX_DIR = C:/wx/wxWidgets-3.1.0
WX_INCLUDES_DIR = $(WX_DIR)/include
WX_SAMPLES_DIR = $(WX_DIR)/samples
WX_SETUP_DIR = $(WX_DIR)/lib/gcc_lib/mswu
WX_LIB_DIR = $(WX_DIR)/lib/gcc_lib

MINGW_INCLUDE_DIR = C:/MinGW/include

CPPDEPS = -MT$@ -MF$@.d -MD -MP
WX_RELEASE_NODOT = 31
COMPILER_PREFIX = gcc
OBJS = \
	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)

LIBDIRNAME = \
	C:\wx\wxWidgets-3.1.0\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(LIBTYPE_SUFFIX)$(CFG)

SETUPHDIR = \
	$(LIBDIRNAME)\$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)

MESHSTAT_CXXFLAGS = $(__DEBUGINFO) $(__OPTIMIZEFLAG_2) $(__THREADSFLAG) $(GCCFLAGS) \
	-DHAVE_W32API_H -D__WXMSW__ -DINI_HANDLER_LINENO=1 $(__WXUNIV_DEFINE_p) $(__DEBUG_DEFINE_p) \
	$(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) \
	$(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p) -I$(SETUPHDIR) \
	-I$(WX_INCLUDES_DIR) -I$(WX_SETUP_DIR) -I$(MINGW_INCLUDE_DIR) \
	$(____CAIRO_INCLUDEDIR_FILENAMES_p) -W -Wall -std=gnu++11 -I. $(__DLLFLAG_p) \
	-I$(WX_SAMPLES_DIR) -DNOPCH $(__RTTIFLAG_5) $(__EXCEPTIONSFLAG_6) \
	-Wno-ctor-dtor-privacy $(CPPFLAGS) $(CXXFLAGS)

MESHSTAT_OBJECTS =  \
	$(OBJS)\ini.o \
	$(OBJS)\wxcrafter.o \
	$(OBJS)\wxcrafter_bitmaps.o \
	$(OBJS)\MainFrame.o \
	$(OBJS)\ColorInterpolate.o \
	$(OBJS)\Node.o \
	$(OBJS)\NodeDisplay.o \
	$(OBJS)\NodeDisplayPane.o \
	$(OBJS)\Config.o \
	$(OBJS)\main.o

### Conditionally set variables: ###

ifeq ($(GCC_VERSION),2.95)
GCCFLAGS = -fvtable-thunks
endif
ifeq ($(USE_GUI),0)
PORTNAME = base
endif
ifeq ($(USE_GUI),1)
PORTNAME = msw$(TOOLKIT_VERSION)
endif
ifeq ($(OFFICIAL_BUILD),1)
COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
endif
ifeq ($(BUILD),debug)
WXDEBUGFLAG = d
endif
ifeq ($(UNICODE),1)
WXUNICODEFLAG = u
endif
ifeq ($(WXUNIV),1)
WXUNIVNAME = univ
endif
ifeq ($(SHARED),1)
WXDLLFLAG = dll
endif
ifeq ($(SHARED),0)
LIBTYPE_SUFFIX = lib
endif
ifeq ($(SHARED),1)
LIBTYPE_SUFFIX = dll
endif
ifeq ($(MONOLITHIC),0)
EXTRALIBS_FOR_BASE = 
endif
ifeq ($(MONOLITHIC),1)
EXTRALIBS_FOR_BASE =   
endif
ifeq ($(BUILD),debug)
__OPTIMIZEFLAG_2 = -O0
endif
ifeq ($(BUILD),release)
__OPTIMIZEFLAG_2 = -O2
endif
ifeq ($(USE_RTTI),0)
__RTTIFLAG_5 = -fno-rtti
endif
ifeq ($(USE_RTTI),1)
__RTTIFLAG_5 = 
endif
ifeq ($(USE_EXCEPTIONS),0)
__EXCEPTIONSFLAG_6 = -fno-exceptions
endif
ifeq ($(USE_EXCEPTIONS),1)
__EXCEPTIONSFLAG_6 = 
endif
ifeq ($(WXUNIV),1)
__WXUNIV_DEFINE_p = -D__WXUNIVERSAL__
endif
ifeq ($(WXUNIV),1)
__WXUNIV_DEFINE_p_1 = --define __WXUNIVERSAL__
endif
ifeq ($(DEBUG_FLAG),0)
__DEBUG_DEFINE_p = -DwxDEBUG_LEVEL=0
endif
ifeq ($(DEBUG_FLAG),0)
__DEBUG_DEFINE_p_1 = --define wxDEBUG_LEVEL=0
endif
ifeq ($(BUILD),release)
__NDEBUG_DEFINE_p = -DNDEBUG
endif
ifeq ($(BUILD),release)
__NDEBUG_DEFINE_p_1 = --define NDEBUG
endif
ifeq ($(USE_EXCEPTIONS),0)
__EXCEPTIONS_DEFINE_p = -DwxNO_EXCEPTIONS
endif
ifeq ($(USE_EXCEPTIONS),0)
__EXCEPTIONS_DEFINE_p_1 = --define wxNO_EXCEPTIONS
endif
ifeq ($(USE_RTTI),0)
__RTTI_DEFINE_p = -DwxNO_RTTI
endif
ifeq ($(USE_RTTI),0)
__RTTI_DEFINE_p_1 = --define wxNO_RTTI
endif
ifeq ($(USE_THREADS),0)
__THREAD_DEFINE_p = -DwxNO_THREADS
endif
ifeq ($(USE_THREADS),0)
__THREAD_DEFINE_p_1 = --define wxNO_THREADS
endif
ifeq ($(UNICODE),0)
__UNICODE_DEFINE_p = -DwxUSE_UNICODE=0
endif
ifeq ($(UNICODE),1)
__UNICODE_DEFINE_p = -D_UNICODE
endif
ifeq ($(UNICODE),0)
__UNICODE_DEFINE_p_1 = --define wxUSE_UNICODE=0
endif
ifeq ($(UNICODE),1)
__UNICODE_DEFINE_p_1 = --define _UNICODE
endif
ifeq ($(USE_CAIRO),1)
____CAIRO_INCLUDEDIR_FILENAMES_p = -I$(CAIRO_ROOT)\include\cairo
endif
ifeq ($(USE_CAIRO),1)
__CAIRO_INCLUDEDIR_p = --include-dir $(CAIRO_ROOT)/include/cairo
endif
ifeq ($(SHARED),1)
__DLLFLAG_p = -DWXUSINGDLL
endif
ifeq ($(SHARED),1)
__DLLFLAG_p_1 = --define WXUSINGDLL
endif
ifeq ($(MONOLITHIC),0)
__WXLIB_CORE_p = \
	-lwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core
endif
ifeq ($(MONOLITHIC),0)
__WXLIB_BASE_p = \
	-lwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)
endif
ifeq ($(MONOLITHIC),1)
__WXLIB_MONO_p = \
	-lwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)
endif
ifeq ($(MONOLITHIC),1)
ifeq ($(USE_STC),1)
__LIB_SCINTILLA_IF_MONO_p = -lwxscintilla$(WXDEBUGFLAG)
endif
endif
ifeq ($(USE_GUI),1)
__LIB_TIFF_p = -lwxtiff$(WXDEBUGFLAG)
endif
ifeq ($(USE_GUI),1)
__LIB_JPEG_p = -lwxjpeg$(WXDEBUGFLAG)
endif
ifeq ($(USE_GUI),1)
__LIB_PNG_p = -lwxpng$(WXDEBUGFLAG)
endif
ifeq ($(USE_CAIRO),1)
__CAIRO_LIB_p = -lcairo
endif
ifeq ($(USE_CAIRO),1)
____CAIRO_LIBDIR_FILENAMES_p = -L$(CAIRO_ROOT)\lib
endif
ifeq ($(BUILD),debug)
ifeq ($(DEBUG_INFO),default)
__DEBUGINFO = -g
endif
endif
ifeq ($(BUILD),release)
ifeq ($(DEBUG_INFO),default)
__DEBUGINFO = 
endif
endif
ifeq ($(DEBUG_INFO),0)
__DEBUGINFO = 
endif
ifeq ($(DEBUG_INFO),1)
__DEBUGINFO = -g
endif
ifeq ($(USE_THREADS),0)
__THREADSFLAG = 
endif
ifeq ($(USE_THREADS),1)
__THREADSFLAG = -mthreads
endif


all: $(OBJS)
$(OBJS):
	-if not exist $(OBJS) mkdir $(OBJS)


include version.make

dist: all
	cp gcc_mswu/MeshStat.exe .
	strip MeshStat.exe
	@rm -f MeshStat-windows-$(MESHSTAT_VERSION).zip
	7z a MeshStat-windows-$(MESHSTAT_VERSION).zip MeshStat.exe README.txt Releases.txt Sample-MeshStat.ini
	@rm MeshStat.exe
	@echo DONE: Created MeshStat-windows-$(MESHSTAT_VERSION).zip

### Targets: ###

all: $(OBJS)\MeshStat.exe

clean: 
	-if exist $(OBJS)\*.o del $(OBJS)\*.o
	-if exist $(OBJS)\*.d del $(OBJS)\*.d
	-if exist $(OBJS)\MeshStat.exe del $(OBJS)\MeshStat.exe

$(OBJS)\MeshStat.exe: $(MESHSTAT_OBJECTS)
	$(CXX) -o $@ $(MESHSTAT_OBJECTS)  $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--subsystem,windows -mwindows $(____CAIRO_LIBDIR_FILENAMES_p) $(LDFLAGS)  $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_SCINTILLA_IF_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)   -lwxzlib$(WXDEBUGFLAG) -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__CAIRO_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lshlwapi -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lversion -lwsock32 -lwininet

$(OBJS)\ini.o: ./inih/ini.c
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\wxcrafter.o: wxcrafter.cpp wxcrafter.h
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\wxcrafter_bitmaps.o: wxcrafter_bitmaps.cpp
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\MainFrame.o: MainFrame.cpp MainFrame.h
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\Config.o: Config.cpp Config.h
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\ColorInterpolate.o: ColorInterpolate.cpp ColorInterpolate.h
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\Node.o: Node.cpp Node.h
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\NodeDisplay.o: NodeDisplay.cpp NodeDisplay.h
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\NodeDisplayPane.o: NodeDisplayPane.cpp NodeDisplayPane.h
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)\main.o: main.cpp
	$(CXX) -c -o $@ $(MESHSTAT_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all clean


SHELL := $(COMSPEC)

# Dependencies tracking:
-include $(OBJS)/*.d
